<?php

/**
* Implements hook_block_info().
*/
function accessible_slider_block_info() {
	$blocks = array();
	$blocks['testing_block'] = array(
		'info' => t('Testing Block')
	);

	return $blocks;
}

function accessible_slider_permission() {
  return array(
    'access slider options' => array(
      'title' => t('Access Slider Options'),
      'description' => t('Change options on the slider.'),
    ),
  );
}

function accessible_slider_menu() {
  $items = array();


  $items['admin/config/media/accessible_slider'] = array(
    'title' => 'Accessible Slider Options',
    'description' => 'Configuration for S51 Sliders',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_accessible_slider_form'),
    'access arguments' => array('access slider options'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Page callback: Current posts settings
 *
 * @see current_posts_menu()
 */
function _accessible_slider_form($form, &$form_state) {

  $form['slider_form'] = array(
    '#type' => 'fieldset', 
    '#title' => "Fieldset Value",
  );


  // Drop down for slider type.
  $form['slider_form']['className'] = array(
    '#type' => 'textfield',
    '#title' => t('Class Name'),
    '#default_value' => variable_get('className', "My value"),
    '#size' => 15,
    '#description' => t('A custom classname for this slider.'),
    '#required' => TRUE,
  );

  // Drop down for slider type.
    $form['slider_form']['sliderType'] = array(
     '#type' => 'select',
     '#title' => t('Slider Type'),
     '#options' => array('infinite' => 'infinate', 'carousel-fade' => 'crossfade'),
     '#required' => TRUE,
     '#default_value' => variable_get('sliderType', "infinite"),
  );


  // $form["slider_form"]['markup'] = array(
  //     '#type' => 'markup', 
  //     '#markup' => t('Here is an example of markup'),
  // );

  return system_settings_form($form);
}

function accessible_slider_block_view($delta = '') {
	$block = array();

	switch ($delta) {
		case 'testing_block':
		$block['subject'] = '';
		$block['content'] = _accessible_slider_block_content();
		break;
	}
	return $block;
}

function _accessible_slider_block_content() {
	$output = file_get_contents(drupal_get_path("module", "accessible_slider")."/slider_markup.html");
	return $output;
}

function accessible_slider_views_pre_render(&$view) {
 // dsm($view);
}

function accessible_slider_block_view_alter(&$data, $block) {
  if (isset($data['subject'])) {
    if ($data['subject'] == "as Slider Block") {
        $id = str_replace("as_slider_block-", "", $block->delta);
        //variable_get($id.'sliderType')

        $classString = "";

        if (variable_get($id.'className')) {
          $classString .= variable_get($id.'className')." ";
        }


        $classString .= "carousel slide ".variable_get('className')." ";

        $classString .= "carousel slide ".variable_get('sliderType')." ";

        $classString .= "slider-type-".variable_get($id.'sliderType')." ";


        $dataAttrString = "";
        $dataAttrString .= "data-interval='false'";
        /*
        $dataAttrString .= "data-transspeed='".variable_get($id.'transitionTime')."' ";
        $dataAttrString .= "data-timeoutspeed='".variable_get($id.'timeoutTime')."'";
        $dataAttrString .= "data-autoslide='".variable_get($id.'autoSlide')."'";
        $dataAttrString .= "data-showpause='".variable_get($id.'showPause')."'";
        $dataAttrString .= "data-showpager='".variable_get($id.'showPager')."'";
        $dataAttrString .= "data-showarrows='".variable_get($id.'showArrows')."'";
        $dataAttrString .= "data-transitiontype='".variable_get($id.'sliderType')."'";
		*/

		    $dataAttrString .= "data-ride='carousel' data-pause='hover'";

        $data['content']['#markup'] = str_replace("view-as-slider-block", "view-as-slider-block ".$classString, $data['content']['#markup']);
        $data['content']['#markup'] = str_replace('class="view ', $dataAttrString.' id="myCarousel" class="view ', $data['content']['#markup']);

        $data['content']['#markup'] = str_replace("view-content", "view-content carousel-inner", $data['content']['#markup']);

        $data['content']['#markup'] = str_replace("views-row", "views-row item", $data['content']['#markup']);
        $data['content']['#markup'] = str_replace("item-1", "item-1 active", $data['content']['#markup']);

        $indicatorString = '<ol class="carousel-indicators">';
        $indicatorString .= '<li data-target="#myCarousel" data-slide-to="1" class="active"></li>';
        $indicatorString .= '</ol>';

        $data['content']['#markup'] = str_replace('<ol class="carousel-indicators"></ol>', $indicatorString, $data['content']['#markup']);


      //  dsm($block);
    }
  }
}

function accessible_slider_js_alter(&$javascript) {
	if (path_is_admin(current_path())) {

	} else {

  		$javascript['misc/bootstrap.min.js'] = drupal_js_defaults(drupal_get_path('module', 'accessible_slider') . '/js/bootstrap.min.js');
  		$javascript['misc/bootstrap.min.js']['weight'] = 0;
  		$javascript['misc/bootstrap-accessibility.js'] = drupal_js_defaults(drupal_get_path('module', 'accessible_slider') . '/js/bootstrap-accessibility.js');
  		$javascript['misc/bootstrap-accessibility.js']['weight'] = 1;

		  $javascript['misc/jquery.js']['data'] = drupal_get_path('module', 'accessible_slider') . '/js/jquery.1.10-min.js';
		//dsm($javascript);
	}
}

/**
* Implements hook_entity_info_alter().
*/
function accessible_slider_entity_info_alter(&$entity_info) {

  $entity_info['node']['view modes']['another_teaser'] = array(
    'label' => t('Another teaser'),
    'custom settings' => TRUE,
  );
}